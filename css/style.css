@keyframes moveInLeft {
  0% {
    opacity: 0;
    /* will be invisible at the start */
    transform: translateX(-10rem);
    /* starts at 100px to the left */ }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0);
    /* back to original position */ } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    /* will be invisible at the start */
    transform: translateX(10rem);
    /* starts at 100px to the left */ }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0);
    /* back to original position */ } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    /* will be invisible at the start */
    transform: translateY(5rem);
    /* starts at 100px to the left */ }
  100% {
    opacity: 1;
    transform: translate(0);
    /* back to original position */ } }

*,
*::after,
*::before {
  box-sizing: inherit;
  margin: 0;
  padding: 0; }

html {
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  /* if Lato is not available, revert to sans-serif */
  /*font-size: 16px;*/
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  backface-visibility: hidden;
  /* hides this background element so font doesn't shake when it slides in */
  color: #fff;
  margin-bottom: 6rem;
  text-transform: uppercase; }
  .heading-primary--main {
    display: block;
    /* Instead of inline -- allows heading to stack */
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* Faster at beginning, slower at end */
    /* 
        animation-delay: 2s;
        animation-iteration-count: 3; 
        */ }
  .heading-primary--sub {
    animation: moveInRight 1s ease-out;
    /* shorthand from animation code above */
    display: block;
    /* occupies 100% of the width */
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.74rem; }

.heading-secondary {
  background-image: linear-gradient(to right, #615fee, #62d44d);
  color: transparent;
  display: inline-block;
  font-size: 3.5rem;
  font-weight: 700;
  text-transform: uppercase;
  transition: all .2s;
  -webkit-background-clip: text; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.btn {
  /* We want the visited state of this button to look the same as original state */ }
  .btn:link, .btn:visited {
    border: 0.2rem solid #fff;
    border-radius: 10rem;
    display: inline-block;
    /* allows button to be on same line as other content, but to behave like a block */
    font-size: 1.6rem;
    letter-spacing: .5rem;
    opacity: .8;
    padding: 1.5rem 4rem;
    position: relative;
    /* so that pseudo button will reference this element */
    text-decoration: none;
    text-transform: uppercase;
    transition: all .2s;
    /* transition property has to be on initial state */ }
  .btn:hover {
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* 3rd value blurs the shadow */
    transform: translateY(-0.3rem); }
    .btn:hover::after {
      opacity: 0;
      transform: scaleX(1.4) scaleY(1.6); }
  .btn:active {
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
    transform: translateY(-0.1rem); }
  .btn--white {
    background-color: #DCDCDC;
    color: #777; }
    .btn--white::after {
      background-color: #DCDCDC;
      color: #777; }
  .btn::after {
    /* pseudo element--create a similar looking button that usually hides behind original button */
    border-radius: 10rem;
    content: "";
    /* Must ALWAYS specify content property, even if it is left blank */
    display: inline-block;
    height: 100%;
    /* Relative to original button */
    left: 0;
    position: absolute;
    top: 0;
    transition: all .4s;
    width: 100%;
    z-index: -1;
    /* Behind original button */ }
  .btn--animated {
    animation: moveInBottom 1s ease-out .75s;
    /* .75s --> delay after page refresh before animation occurs */
    animation-fill-mode: backwards;
    /* automatically applies styles at 0% before animation starts */ }

.btn-text:link, .btn-text:visited {
  border-bottom: 1px solid #615fee;
  color: #615fee;
  display: inline-block;
  font-size: 1.6rem;
  padding: 3px;
  text-decoration: none;
  transition: all .2s; }

.btn-text:hover {
  background-color: #615fee;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  color: #fff;
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
  transform: translateY(0); }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    clear: both;
    content: "";
    display: table; }
  .row [class^="col-"] {
    color: gray;
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - (2 * 6rem)) / 3); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - ( 2 * 6rem)) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - (3 * 6rem)) / 4); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - (3 * 6rem)) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - (3 * 6rem)) / 4) + (2 * 6rem)); }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(98, 212, 77, 0.849), rgba(97, 95, 238, 0.842)), url("../img/bg-header.jpg");
  background-position: top;
  background-size: cover;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* Starting clockwise from top left corner */
  position: relative;
  /* Origin and reference from where logo-box positions itself */ }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    left: 50%;
    /* In relation to parent element */
    position: absolute;
    top: 50%;
    /* In relation to parent element */
    transform: translate(-50%, -50%);
    /* In relation to the element itself, not parent */
    text-align: center;
    /* Will center btn-white */ }

.section-about {
  background-color: #f7f7f7;
  margin-top: -20vh;
  padding: 25rem 0; }

.img {
  margin: 2rem 2rem 2rem 0;
  width: 30%; }
