// Colors
$color-green: #62d44d;
$color-grey-dark: #777;
$color-grey-light: #999;
$color-purple: #615fee;
$color-white: #fff;

*,
*::after,
*::before {
    box-sizing: inherit;    
    margin: 0;
    padding: 0;
}

html {
    font-size: 62.5%;  /*root font-size default is 16px--this sets it to 10px*/
}

body {
    box-sizing: border-box; /* Eliminate padding/margin being added to specified height/width of box */
    font-family: "Lato", sans-serif; /* if Lato is not available, revert to sans-serif */
    /*font-size: 16px;*/
    font-weight: 400;
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 3rem;
}

.header {
    height: 95vh;
    background-image: linear-gradient(
        to right bottom, 
        rgba($color-green, 0.849), rgba($color-purple, 0.842)),
        url("../img/bg-header.jpg");
    background-position: top;
    background-size: cover;    
    position: relative; /* Origin and reference from where logo-box positions itself */
}

.header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.header__logo {
    height: 3.5rem;
}

.header__text-box {
    left: 50%; /* In relation to parent element */
    position: absolute;
    top: 50%; /* In relation to parent element */
    transform: translate(-50%, -50%); /* In relation to the element itself, not parent */
    text-align: center; /* Will center .btn-white */
}

.heading-primary {
    backface-visibility: hidden; /* hides this background element so font doesn't shake when it slides in */
    color: $color-white;
    margin-bottom: 6rem;
    text-transform: uppercase;    
}

.heading-primary--main {
    display: block; /* Instead of inline -- allows heading to stack */
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; /* Faster at beginning, slower at end */
    /* 
    animation-delay: 2s;
    animation-iteration-count: 3; 
    */
}

.heading-primary--sub {
    animation: moveInRight 1s ease-out; /* shorthand from animation code above */
    display: block; /* occupies 100% of the width */
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.74rem;    
}

@keyframes moveInLeft {
    0% {
        opacity: 0; /* will be invisible at the start */
        transform: translateX(-10rem); /* starts at 100px to the left */
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0); /* back to original position */
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0; /* will be invisible at the start */
        transform: translateX(10rem); /* starts at 100px to the left */
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0); /* back to original position */
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0; /* will be invisible at the start */
        transform: translateY(5rem); /* starts at 100px to the left */
    }

    100% {
        opacity: 1;
        transform: translate(0); /* back to original position */
    }
}

.btn:link,
.btn:visited {
    border: .2rem solid $color-white;
    border-radius: 10rem;
    display: inline-block; /* allows button to be on same line as other content, but to behave like a block */
    font-size: 1.6rem;
    padding: 1.5rem 4rem;
    position: relative; /* so that pseudo button will reference this element */
    text-decoration: none;
    text-transform: uppercase;
    transition: all .2s;  /* transition property has to be on initial state */
} /* We want the visited state of this button to look the same as original state */

.btn:hover {
    box-shadow: 0 1rem 2rem rgba(0,0,0,.2); /* 3rd value blurs the shadow */
    transform: translateY(-.3rem);
}

.btn:active {
    box-shadow: 0 .5rem 1rem rgba(0,0,0,.2);
    transform: translateY(-.1rem);
}

.btn--white {
    background-color: $color-grey-light;
    color: $color-white;
}

.btn::after { /* pseudo element--create a similar looking button that usually hides behind original button */
    border-radius: 10rem;
    content: ""; /* Must ALWAYS specify content property, even if it is left blank */
    display: inline-block;    
    height: 100%; /* Relative to original button */
    left: 0;
    position: absolute;
    top: 0;
    transition: all .4s;
    width: 100%;
    z-index: -1; /* Behind original button */
}

.btn--white::after {
    background-color: $color-grey-light;
    color: $color-white;
}

.btn:hover::after {
    opacity: 0;
    transform: scaleX(1.4) scaleY(1.6);
}

.btn--animated {
    animation: moveInBottom 1s ease-out .75s; /* .75s --> delay after page refresh before animation occurs */
    animation-fill-mode: backwards; /* automatically applies styles at 0% before animation starts */
}

.img {
    margin: 2rem 2rem 2rem 0;
    width: 30%
}